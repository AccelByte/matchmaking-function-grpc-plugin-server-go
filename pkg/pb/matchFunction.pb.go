// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: matchFunction.proto

package pb

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetStatCodes
type GetStatCodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules *Rules `protobuf:"bytes,1,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *GetStatCodesRequest) Reset() {
	*x = GetStatCodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatCodesRequest) ProtoMessage() {}

func (x *GetStatCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatCodesRequest.ProtoReflect.Descriptor instead.
func (*GetStatCodesRequest) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{0}
}

func (x *GetStatCodesRequest) GetRules() *Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type StatCodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *StatCodesResponse) Reset() {
	*x = StatCodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatCodesResponse) ProtoMessage() {}

func (x *StatCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatCodesResponse.ProtoReflect.Descriptor instead.
func (*StatCodesResponse) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{1}
}

func (x *StatCodesResponse) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

// ValidateTicket
type ValidateTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Rules  *Rules  `protobuf:"bytes,2,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *ValidateTicketRequest) Reset() {
	*x = ValidateTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTicketRequest) ProtoMessage() {}

func (x *ValidateTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTicketRequest.ProtoReflect.Descriptor instead.
func (*ValidateTicketRequest) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateTicketRequest) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *ValidateTicketRequest) GetRules() *Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type ValidateTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *ValidateTicketResponse) Reset() {
	*x = ValidateTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTicketResponse) ProtoMessage() {}

func (x *ValidateTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTicketResponse.ProtoReflect.Descriptor instead.
func (*ValidateTicketResponse) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{3}
}

func (x *ValidateTicketResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

// Make Matches
type MakeMatchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RequestType:
	//
	//	*MakeMatchesRequest_Parameters
	//	*MakeMatchesRequest_Ticket
	RequestType isMakeMatchesRequest_RequestType `protobuf_oneof:"request_type"`
}

func (x *MakeMatchesRequest) Reset() {
	*x = MakeMatchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeMatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeMatchesRequest) ProtoMessage() {}

func (x *MakeMatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeMatchesRequest.ProtoReflect.Descriptor instead.
func (*MakeMatchesRequest) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{4}
}

func (m *MakeMatchesRequest) GetRequestType() isMakeMatchesRequest_RequestType {
	if m != nil {
		return m.RequestType
	}
	return nil
}

func (x *MakeMatchesRequest) GetParameters() *MakeMatchesRequest_MakeMatchesParameters {
	if x, ok := x.GetRequestType().(*MakeMatchesRequest_Parameters); ok {
		return x.Parameters
	}
	return nil
}

func (x *MakeMatchesRequest) GetTicket() *Ticket {
	if x, ok := x.GetRequestType().(*MakeMatchesRequest_Ticket); ok {
		return x.Ticket
	}
	return nil
}

type isMakeMatchesRequest_RequestType interface {
	isMakeMatchesRequest_RequestType()
}

type MakeMatchesRequest_Parameters struct {
	Parameters *MakeMatchesRequest_MakeMatchesParameters `protobuf:"bytes,1,opt,name=parameters,proto3,oneof"`
}

type MakeMatchesRequest_Ticket struct {
	Ticket *Ticket `protobuf:"bytes,2,opt,name=ticket,proto3,oneof"`
}

func (*MakeMatchesRequest_Parameters) isMakeMatchesRequest_RequestType() {}

func (*MakeMatchesRequest_Ticket) isMakeMatchesRequest_RequestType() {}

type MatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match *Match `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *MatchResponse) Reset() {
	*x = MatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResponse) ProtoMessage() {}

func (x *MatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResponse.ProtoReflect.Descriptor instead.
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{5}
}

func (x *MatchResponse) GetMatch() *Match {
	if x != nil {
		return x.Match
	}
	return nil
}

type Scope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbTraceId string `protobuf:"bytes,1,opt,name=ab_trace_id,json=abTraceId,proto3" json:"ab_trace_id,omitempty"`
}

func (x *Scope) Reset() {
	*x = Scope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scope) ProtoMessage() {}

func (x *Scope) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scope.ProtoReflect.Descriptor instead.
func (*Scope) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{6}
}

func (x *Scope) GetAbTraceId() string {
	if x != nil {
		return x.AbTraceId
	}
	return ""
}

type Rules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *Rules) Reset() {
	*x = Rules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rules) ProtoMessage() {}

func (x *Rules) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rules.ProtoReflect.Descriptor instead.
func (*Rules) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{7}
}

func (x *Rules) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets           []*Ticket       `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	Teams             []*Match_Team   `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
	RegionPreferences []string        `protobuf:"bytes,3,rep,name=region_preferences,json=regionPreferences,proto3" json:"region_preferences,omitempty"`
	MatchAttributes   *_struct.Struct `protobuf:"bytes,4,opt,name=match_attributes,json=matchAttributes,proto3" json:"match_attributes,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{8}
}

func (x *Match) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *Match) GetTeams() []*Match_Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *Match) GetRegionPreferences() []string {
	if x != nil {
		return x.RegionPreferences
	}
	return nil
}

func (x *Match) GetMatchAttributes() *_struct.Struct {
	if x != nil {
		return x.MatchAttributes
	}
	return nil
}

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId         string               `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	MatchPool        string               `protobuf:"bytes,2,opt,name=match_pool,json=matchPool,proto3" json:"match_pool,omitempty"`
	CreatedAt        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	Players          []*Ticket_PlayerData `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	TicketAttributes *_struct.Struct      `protobuf:"bytes,5,opt,name=ticket_attributes,json=ticketAttributes,proto3" json:"ticket_attributes,omitempty"`
	Latencies        map[string]int64     `protobuf:"bytes,6,rep,name=latencies,proto3" json:"latencies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{9}
}

func (x *Ticket) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *Ticket) GetMatchPool() string {
	if x != nil {
		return x.MatchPool
	}
	return ""
}

func (x *Ticket) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Ticket) GetPlayers() []*Ticket_PlayerData {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Ticket) GetTicketAttributes() *_struct.Struct {
	if x != nil {
		return x.TicketAttributes
	}
	return nil
}

func (x *Ticket) GetLatencies() map[string]int64 {
	if x != nil {
		return x.Latencies
	}
	return nil
}

type MakeMatchesRequest_MakeMatchesParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope *Scope `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Rules *Rules `protobuf:"bytes,2,opt,name=rules,proto3" json:"rules,omitempty"`
}

func (x *MakeMatchesRequest_MakeMatchesParameters) Reset() {
	*x = MakeMatchesRequest_MakeMatchesParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeMatchesRequest_MakeMatchesParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeMatchesRequest_MakeMatchesParameters) ProtoMessage() {}

func (x *MakeMatchesRequest_MakeMatchesParameters) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeMatchesRequest_MakeMatchesParameters.ProtoReflect.Descriptor instead.
func (*MakeMatchesRequest_MakeMatchesParameters) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MakeMatchesRequest_MakeMatchesParameters) GetScope() *Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *MakeMatchesRequest_MakeMatchesParameters) GetRules() *Rules {
	if x != nil {
		return x.Rules
	}
	return nil
}

type Match_Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *Match_Team) Reset() {
	*x = Match_Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match_Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match_Team) ProtoMessage() {}

func (x *Match_Team) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match_Team.ProtoReflect.Descriptor instead.
func (*Match_Team) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Match_Team) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type Ticket_PlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string          `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Attributes *_struct.Struct `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Ticket_PlayerData) Reset() {
	*x = Ticket_PlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchFunction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket_PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket_PlayerData) ProtoMessage() {}

func (x *Ticket_PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_matchFunction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket_PlayerData.ProtoReflect.Descriptor instead.
func (*Ticket_PlayerData) Descriptor() ([]byte, []int) {
	return file_matchFunction_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Ticket_PlayerData) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Ticket_PlayerData) GetAttributes() *_struct.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

var File_matchFunction_proto protoreflect.FileDescriptor

var file_matchFunction_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0x62, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x81, 0x02, 0x0a, 0x12, 0x4d, 0x61, 0x6b, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x6b, 0x65,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x27, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x5f, 0x0a, 0x15, 0x4d, 0x61, 0x6b, 0x65,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a, 0x0d, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x27,
	0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x62, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x62,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6a, 0x73, 0x6f, 0x6e, 0x22, 0xef, 0x01, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x27,
	0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x42, 0x0a, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x1a, 0x21, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xd6, 0x03, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x38, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x10, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x62, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32,
	0xe8, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x4d, 0x61, 0x6b, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61,
	0x6b, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_matchFunction_proto_rawDescOnce sync.Once
	file_matchFunction_proto_rawDescData = file_matchFunction_proto_rawDesc
)

func file_matchFunction_proto_rawDescGZIP() []byte {
	file_matchFunction_proto_rawDescOnce.Do(func() {
		file_matchFunction_proto_rawDescData = protoimpl.X.CompressGZIP(file_matchFunction_proto_rawDescData)
	})
	return file_matchFunction_proto_rawDescData
}

var file_matchFunction_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_matchFunction_proto_goTypes = []interface{}{
	(*GetStatCodesRequest)(nil),                      // 0: model.GetStatCodesRequest
	(*StatCodesResponse)(nil),                        // 1: model.StatCodesResponse
	(*ValidateTicketRequest)(nil),                    // 2: model.ValidateTicketRequest
	(*ValidateTicketResponse)(nil),                   // 3: model.ValidateTicketResponse
	(*MakeMatchesRequest)(nil),                       // 4: model.MakeMatchesRequest
	(*MatchResponse)(nil),                            // 5: model.MatchResponse
	(*Scope)(nil),                                    // 6: model.Scope
	(*Rules)(nil),                                    // 7: model.Rules
	(*Match)(nil),                                    // 8: model.Match
	(*Ticket)(nil),                                   // 9: model.Ticket
	(*MakeMatchesRequest_MakeMatchesParameters)(nil), // 10: model.MakeMatchesRequest.MakeMatchesParameters
	(*Match_Team)(nil),                               // 11: model.Match.Team
	(*Ticket_PlayerData)(nil),                        // 12: model.Ticket.PlayerData
	nil,                                              // 13: model.Ticket.LatenciesEntry
	(*_struct.Struct)(nil),                           // 14: google.protobuf.Struct
	(*timestamp.Timestamp)(nil),                      // 15: google.protobuf.Timestamp
}
var file_matchFunction_proto_depIdxs = []int32{
	7,  // 0: model.GetStatCodesRequest.rules:type_name -> model.Rules
	9,  // 1: model.ValidateTicketRequest.ticket:type_name -> model.Ticket
	7,  // 2: model.ValidateTicketRequest.rules:type_name -> model.Rules
	10, // 3: model.MakeMatchesRequest.parameters:type_name -> model.MakeMatchesRequest.MakeMatchesParameters
	9,  // 4: model.MakeMatchesRequest.ticket:type_name -> model.Ticket
	8,  // 5: model.MatchResponse.match:type_name -> model.Match
	9,  // 6: model.Match.tickets:type_name -> model.Ticket
	11, // 7: model.Match.teams:type_name -> model.Match.Team
	14, // 8: model.Match.match_attributes:type_name -> google.protobuf.Struct
	15, // 9: model.Ticket.CreatedAt:type_name -> google.protobuf.Timestamp
	12, // 10: model.Ticket.players:type_name -> model.Ticket.PlayerData
	14, // 11: model.Ticket.ticket_attributes:type_name -> google.protobuf.Struct
	13, // 12: model.Ticket.latencies:type_name -> model.Ticket.LatenciesEntry
	6,  // 13: model.MakeMatchesRequest.MakeMatchesParameters.scope:type_name -> model.Scope
	7,  // 14: model.MakeMatchesRequest.MakeMatchesParameters.rules:type_name -> model.Rules
	14, // 15: model.Ticket.PlayerData.attributes:type_name -> google.protobuf.Struct
	0,  // 16: model.MatchFunction.GetStatCodes:input_type -> model.GetStatCodesRequest
	2,  // 17: model.MatchFunction.ValidateTicket:input_type -> model.ValidateTicketRequest
	4,  // 18: model.MatchFunction.MakeMatches:input_type -> model.MakeMatchesRequest
	1,  // 19: model.MatchFunction.GetStatCodes:output_type -> model.StatCodesResponse
	3,  // 20: model.MatchFunction.ValidateTicket:output_type -> model.ValidateTicketResponse
	5,  // 21: model.MatchFunction.MakeMatches:output_type -> model.MatchResponse
	19, // [19:22] is the sub-list for method output_type
	16, // [16:19] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_matchFunction_proto_init() }
func file_matchFunction_proto_init() {
	if File_matchFunction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_matchFunction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatCodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatCodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeMatchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeMatchesRequest_MakeMatchesParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match_Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchFunction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket_PlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_matchFunction_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*MakeMatchesRequest_Parameters)(nil),
		(*MakeMatchesRequest_Ticket)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matchFunction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matchFunction_proto_goTypes,
		DependencyIndexes: file_matchFunction_proto_depIdxs,
		MessageInfos:      file_matchFunction_proto_msgTypes,
	}.Build()
	File_matchFunction_proto = out.File
	file_matchFunction_proto_rawDesc = nil
	file_matchFunction_proto_goTypes = nil
	file_matchFunction_proto_depIdxs = nil
}
